--------------to create new file :---------------------
1> {touch filename.extension}
1:filename is the name of the file .
extension is the extension of the file like (.txt , .html ...etc).

---------------------to initialize---------------------
1> {git init}
1:this command will initialize the current folder and create a repository inside it, and a .git folder will be created inside the current folder.

------------see what is inside the repository----------
1> {git status}
1:this code will show you all the files and infos.

---------add the files to the local repository----------
1> {git add filename.extension}
2> {git add .}
1:this code will add the specified file to the repository (.git) .
2:this code will add all the files to the repository (.git).

------------add description to the commit change-------------
1> {git commit -m "description here"}
1:this command will set a description to the change you made in your project.

-------------------check history of logs--------------------
1> {git log}
1:this command will show you the history of commits (the person info + the date +description of the commit(git commit -m "").

----------link the local repository with the online one-----------
1>{git remote add origin https://github.com/salsa-project/repositoryname}
1:this code will link the local repository on your computer with the repository on github.

---------------------push to github --------------------
1> {git push origin master}
2> {git push -u origin master}
1:push your project from your pc to github.
2:push an existing repository rom your pc to github.

-----------------get update the project------------------
1> {git pull origin master}
1:this command will update the project to be the same as the github repo.
ex: in teamWork some one add two files to the project .. when you open the folder of the project in your computer the 2 files won't be exist in your desktop cause you didn't get the latest update from the origin repository.

-----------reset the project-----------------
1> {git reset --hard}
1:this command will discard all the changes that made after the last commit.

-------------git remove----------------------
Coming Soon ..

------------------git branch--------------------
Coming Soon ..

